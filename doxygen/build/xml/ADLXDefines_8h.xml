<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ADLXDefines_8h" kind="file" language="C++">
    <compoundname>ADLXDefines.h</compoundname>
    <includes local="no">windows.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">wchar.h</includes>
    <includedby refid="ADLX_8h" local="yes">ADLX.h</includedby>
    <includedby refid="ADLXStructures_8h" local="yes">ADLXStructures.h</includedby>
    <includedby refid="ICollections_8h" local="yes">ICollections.h</includedby>
    <includedby refid="IDisplay3DLUT_8h" local="yes">IDisplay3DLUT.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>windows.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>wchar.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="1">
        <label>ADLXDefines.h</label>
        <link refid="ADLXDefines_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>ICollections.h</label>
        <link refid="ICollections_8h"/>
      </node>
      <node id="3">
        <label>ADLXStructures.h</label>
        <link refid="ADLXStructures_8h"/>
      </node>
      <node id="2">
        <label>ADLX.h</label>
        <link refid="ADLX_8h"/>
      </node>
      <node id="5">
        <label>IDisplay3DLUT.h</label>
        <link refid="IDisplay3DLUT_8h"/>
      </node>
      <node id="1">
        <label>ADLXDefines.h</label>
        <link refid="ADLXDefines_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classadlx_1_1IADLXInterface" prot="public">adlx::IADLXInterface</innerclass>
    <innerclass refid="classadlx_1_1IADLXInterfacePtr__T" prot="public">adlx::IADLXInterfacePtr_T</innerclass>
    <innernamespace refid="namespaceadlx">adlx</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="ADLXDefines_8h_1acbf896f8442c1b98285723ef70df2dc2" prot="public" static="no">
        <name>ADLX_MAKE_FULL_VER</name>
        <param><defname>VERSION_MAJOR</defname></param>
        <param><defname>VERSION_MINOR</defname></param>
        <param><defname>VERSION_RELEASE</defname></param>
        <param><defname>VERSION_BUILD_NUM</defname></param>
        <initializer>( ((<ref refid="ADLXDefines_8h_1aefc827e657b29c87c0f3de4af0313663" kindref="member">adlx_uint64</ref>)(VERSION_MAJOR) &lt;&lt; 48ull) | ((<ref refid="ADLXDefines_8h_1aefc827e657b29c87c0f3de4af0313663" kindref="member">adlx_uint64</ref>)(VERSION_MINOR) &lt;&lt; 32ull) | ((<ref refid="ADLXDefines_8h_1aefc827e657b29c87c0f3de4af0313663" kindref="member">adlx_uint64</ref>)(VERSION_RELEASE) &lt;&lt; 16ull)  | (<ref refid="ADLXDefines_8h_1aefc827e657b29c87c0f3de4af0313663" kindref="member">adlx_uint64</ref>)(VERSION_BUILD_NUM))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="47" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1ab69830799ad6b447904567f7a1a777d8" prot="public" static="no">
        <name>ADLX_VER_MAJOR</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="49" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1a570f43462e6bc58be96a7c29057925de" prot="public" static="no">
        <name>ADLX_VER_MINOR</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="50" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1ac7d834b2f2a11818032368c97eb1c961" prot="public" static="no">
        <name>ADLX_VER_RELEASE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="51" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1afd4670105c56d2809246aa7ed5a40a08" prot="public" static="no">
        <name>ADLX_VER_BUILD_NUM</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="52" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1a14dd7294b63695d25406ef8b622f0585" prot="public" static="no">
        <name>ADLX_FULL_VERSION</name>
        <initializer><ref refid="ADLXDefines_8h_1acbf896f8442c1b98285723ef70df2dc2" kindref="member">ADLX_MAKE_FULL_VER</ref>(<ref refid="ADLXDefines_8h_1ab69830799ad6b447904567f7a1a777d8" kindref="member">ADLX_VER_MAJOR</ref>, <ref refid="ADLXDefines_8h_1a570f43462e6bc58be96a7c29057925de" kindref="member">ADLX_VER_MINOR</ref>, <ref refid="ADLXDefines_8h_1ac7d834b2f2a11818032368c97eb1c961" kindref="member">ADLX_VER_RELEASE</ref>, <ref refid="ADLXDefines_8h_1afd4670105c56d2809246aa7ed5a40a08" kindref="member">ADLX_VER_BUILD_NUM</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="54" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1aae8468f2e510664116494bfde13e3db8" prot="public" static="no">
        <name>ADLX_CORE_LINK</name>
        <initializer>__declspec(dllexport)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="135" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1a5339814ff38733ae1fb89b372143a9e7" prot="public" static="no">
        <name>ADLX_STD_CALL</name>
        <initializer>__stdcall</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="136" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1ae65e2f8bee9a29f8e00bf58746fa59a0" prot="public" static="no">
        <name>ADLX_CDECL_CALL</name>
        <initializer>__cdecl</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="137" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1ae0545abb23d6f4a463d48723ff8038c1" prot="public" static="no">
        <name>ADLX_FAST_CALL</name>
        <initializer>__fastcall</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="138" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1a1fb46c1b483e91e0611a6cd2aca842b9" prot="public" static="no">
        <name>ADLX_INLINE</name>
        <initializer>__inline</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="139" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1a8f571ca7d02a51be595db45ba715f90c" prot="public" static="no">
        <name>ADLX_FORCEINLINE</name>
        <initializer>__forceinline</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="140" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1a5e8ce4ed67dbfc5e6a6e691ebb5a1091" prot="public" static="no">
        <name>ADLX_NO_VTABLE</name>
        <initializer>__declspec(novtable)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="141" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1aad41a85fa23d505e4f124d6816f3cfbd" prot="public" static="no">
        <name>adlx_countof</name>
        <param><defname>x</defname></param>
        <initializer>(sizeof(x) / sizeof(x[0]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="227" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1aa6d4b27e28dc60797e52e901ad4e9ced" prot="public" static="no">
        <name>ADLX_SUCCEEDED</name>
        <param><defname>x</defname></param>
        <initializer>(<ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a72597a9998fa21f37bfcaddd9cafaed5" kindref="member">ADLX_OK</ref> == x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="256" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1a6ea0e7f02e40768a1e47cb60e0e6f482" prot="public" static="no">
        <name>ADLX_FAILED</name>
        <param><defname>x</defname></param>
        <initializer>(<ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a72597a9998fa21f37bfcaddd9cafaed5" kindref="member">ADLX_OK</ref> != x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="257" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1a2297e1f14e76bd30cd1b24a018218692" prot="public" static="no">
        <name>ADLX_DECLARE_IID</name>
        <param><defname>X</defname></param>
        <initializer>static <ref refid="ADLXDefines_8h_1a1fb46c1b483e91e0611a6cd2aca842b9" kindref="member">ADLX_INLINE</ref> const wchar_t* IID()  { return X; }</initializer>
        <briefdescription>
<para>iid of interface <emphasis>X</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>input value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>gte <emphasis>X</emphasis>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="540" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1a930574b15ad76647f7d55cb0273cf397" prot="public" static="no">
        <name>ADLX_IS_IID</name>
        <param><defname>X</defname></param>
        <param><defname>Y</defname></param>
        <initializer>(!wcscmp (X, Y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="541" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1aede8a40979edc05b036d618792c64151" prot="public" static="no">
        <name>ADLX_DECLARE_ITEM_IID</name>
        <param><defname>X</defname></param>
        <initializer>static <ref refid="ADLXDefines_8h_1a1fb46c1b483e91e0611a6cd2aca842b9" kindref="member">ADLX_INLINE</ref> const wchar_t* ITEM_IID()  { return X; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="543" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="543" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ADLXDefines_8h_1a930574b15ad76647f7d55cb0273cf397" prot="public" static="no">
        <name>ADLX_IS_IID</name>
        <param><defname>X</defname></param>
        <param><defname>Y</defname></param>
        <initializer>(!wcscmp (X, Y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="544" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="544" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0" prot="public" static="no" strong="no">
        <type></type>
        <name>ADLX_RESULT</name>
        <enumvalue id="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a72597a9998fa21f37bfcaddd9cafaed5" prot="public">
          <name>ADLX_OK</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Success </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0aa559b325fb345d9152b653588511db5c" prot="public">
          <name>ADLX_FAIL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Unspecified failure </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0af44fabfdb08be14d11a6d2f732c856b7" prot="public">
          <name>ADLX_INVALID_ARGS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Invalid arguments </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0ac571770e655e2cf695827fb4a15e35c0" prot="public">
          <name>ADLX_BAD_VER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Version asked is higher than ours </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a8fc7732baab75a3c05f77d1bf4a70d20" prot="public">
          <name>ADLX_UNKNOWN_INTERFACE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>unknown interface was asked </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0ae5f780950728a255730b0280499acb72" prot="public">
          <name>ADLX_TERMINATED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Calls were made in an interface after ADLX was terminated </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a8de27968a45d7be7db0dd081935b9c2a" prot="public">
          <name>ADLX_ADL_INITI_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ADL initialization failed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a407e7fb76cdc6900948ba09adbc55a99" prot="public">
          <name>ADLX_NOT_FOUND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Item is not found </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a447f8d425a70ea68f944e0678206e74e" prot="public">
          <name>ADLX_INVALID_OBJECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Caller object is not available </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a0f2aa9a92254cd0fe4b705b0f77ca314" prot="public">
          <name>ADLX_ORPHAN_OBJECTS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ADLX was terminated with outstanding ADLX objects. Any interface to them will point to invalid memory and calls in them will result in unexpected behavior </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Different return types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="243" column="1" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="244" bodyend="255"/>
      </memberdef>
      <memberdef kind="enum" id="ADLXDefines_8h_1a20ebb33d785b59e04eabe454d0d275a7" prot="public" static="no" strong="no">
        <type></type>
        <name>ADLX_HGType</name>
        <enumvalue id="ADLXDefines_8h_1a20ebb33d785b59e04eabe454d0d275a7ac157bdf0b85a40d2619cbc8bc1ae5fe2" prot="public">
          <name>NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Not Hybrid Graphics system </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a20ebb33d785b59e04eabe454d0d275a7ac1f5c308ff9610759dbc1415b20df568" prot="public">
          <name>AMD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Integrated GPU is AMD </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a20ebb33d785b59e04eabe454d0d275a7adbf1dee1b8cd7ea3c82661943c7b74f4" prot="public">
          <name>OTHER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Integrated GPU is non-AMD </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of Hybrid Graphics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="269" column="1" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="270" bodyend="274"/>
      </memberdef>
      <memberdef kind="enum" id="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2c" prot="public" static="no" strong="no">
        <type></type>
        <name>ADLX_ASICFAMTYPE</name>
        <enumvalue id="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2ca3545ff1a23cd34b9adbc8c665a5951be" prot="public">
          <name>ASIC_UNDEFINED</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ASIC type is not defined </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2ca0dc8ed090699f28b662b7c765274cf9e" prot="public">
          <name>ASIC_RADEON</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ASIC type is discrete </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2ca80725f02993ea38bb16b978d9226fd0b" prot="public">
          <name>ASIC_FIREPRO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ASIC type is Firepro </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2ca0ad611b8d03595461b2e81edb4ca5195" prot="public">
          <name>ASIC_FIREMV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ASIC type is FireMV </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2cadbd861ee855957a3422ae76d20b71d7c" prot="public">
          <name>ASIC_FIRESTREAM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ASIC type is FireStream </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2ca96ee7dab50a7cdb839879acb9a4e64e3" prot="public">
          <name>ASIC_FUSION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ASIC type is Fusion </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2cac6b09b34c87726a358773f7fad37ffc8" prot="public">
          <name>ASIC_EMBEDDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ASIC type is Enbedded </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>ASIC Family Type enumeration values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="285" column="1" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="286" bodyend="294"/>
      </memberdef>
      <memberdef kind="enum" id="ADLXDefines_8h_1a0a07dec967855727a17681c44ed5db6f" prot="public" static="no" strong="no">
        <type></type>
        <name>ADLX_GPUTYPE</name>
        <enumvalue id="ADLXDefines_8h_1a0a07dec967855727a17681c44ed5db6face1bf6380e6eb87aec4f7879f4d117c9" prot="public">
          <name>GPUTYPE_UNDEFINED</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Not known </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a0a07dec967855727a17681c44ed5db6faf54e5303fc76110709462383628c0d5b" prot="public">
          <name>GPUTYPE_INTEGRATED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Integrated GPU </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a0a07dec967855727a17681c44ed5db6fa5aa5ebc90d45840cfadec5bd25e50423" prot="public">
          <name>GPUTYPE_DISCRETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Discrete GPU </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>GPU Type enumeration values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="305" column="1" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="306" bodyend="310"/>
      </memberdef>
      <memberdef kind="enum" id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8" prot="public" static="no" strong="no">
        <type></type>
        <name>ADLX_DISPLAY_CONTYPE</name>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a294e0c1bbb3ca9ccd0b4c9872f697f66" prot="public">
          <name>DISPLAY_CONTYPE_UNKNOWN</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Unknow </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8afb7606e80d94f991f4adf02a785de52e" prot="public">
          <name>DISPLAY_CONTYPE_VGA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VGA </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a66e9c3dc1143b21d451f1eeeda928922" prot="public">
          <name>DISPLAY_CONTYPE_DVI_D</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DVI-D </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a976f94a4c526e32729689885d12b4974" prot="public">
          <name>DISPLAY_CONTYPE_DVI_I</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DVI-I </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8acd8ebf44ecb270f609f714fc7498dcc7" prot="public">
          <name>DISPLAY_CONTYPE_ATICVDONGLE_NTSC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>NTSC </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a7db4f3939cd75af1bd6b6f9145ed922a" prot="public">
          <name>DISPLAY_CONTYPE_ATICVDONGLE_JPN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>JPN </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a0ade514509e706736405f5dfd8a2bded" prot="public">
          <name>DISPLAY_CONTYPE_ATICVDONGLE_NONI2C_JPN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>NONI2C-JPN </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a6e40beb2a47876f713c59f8f3ca6c4c3" prot="public">
          <name>DISPLAY_CONTYPE_ATICVDONGLE_NONI2C_NTSC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>NONI2C-NTSC </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a34fc9104608a5827f65b4966c53a215e" prot="public">
          <name>DISPLAY_CONTYPE_PROPRIETARY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>PROPRIETARY </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a0ea53d6c677500162804e524be36389e" prot="public">
          <name>DISPLAY_CONTYPE_HDMI_TYPE_A</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>HDMI A </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a0f343261982b3c21d374c522e94dbf99" prot="public">
          <name>DISPLAY_CONTYPE_HDMI_TYPE_B</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>HDMI B </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8ab0d21daf08250dd0addd6d38c6bde568" prot="public">
          <name>DISPLAY_CONTYPE_SVIDEO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SVIDEO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8adb930735bf83ac951478cfe1e48e988b" prot="public">
          <name>DISPLAY_CONTYPE_COMPOSITE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>COMPOSITE </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a6115b6cde3b24f5c0f1f30a551c6f302" prot="public">
          <name>DISPLAY_CONTYPE_RCA_3COMPONENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RCA </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a8b7f2b83c5165a353b89c8ee30f00926" prot="public">
          <name>DISPLAY_CONTYPE_DISPLAYPORT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DISPLAYPORT </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a6e95611aba096c0c4e9fc4d39fa5b1aa" prot="public">
          <name>DISPLAY_CONTYPE_EDP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>EDP </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a0dcdd2ed087cd3a4dd1deaa4be25e20c" prot="public">
          <name>DISPLAY_CONTYPE_WIRELESSDISPLAY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>WIRELESSDISPLAY </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8abcdfb70a8ce8756085bc779863d633cb" prot="public">
          <name>DISPLAY_CONTYPE_USB_TYPE_C</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>TYPE C </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Display Connector Type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="321" column="1" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="322" bodyend="341"/>
      </memberdef>
      <memberdef kind="enum" id="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44" prot="public" static="no" strong="no">
        <type></type>
        <name>ADLX_DISPLAY_TYPE</name>
        <enumvalue id="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44aa2fa6d64ccb655bb744838972531f814" prot="public">
          <name>DISPLAY_TYPE_MONITOR</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Monitor display type </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44a8b6bf038d0bc3fa0407ec57552fb6c3a" prot="public">
          <name>DISPLAY_TYPE_TELEVISION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>TV display type </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44a95122594fce234a2f413fa5bacfbb0b8" prot="public">
          <name>DISPLAY_TYPE_LCD_PANEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>LCD display type </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44a2e71d866e8fc16c2142042a063cf5c14" prot="public">
          <name>DISPLAY_TYPE_DIGITAL_FLAT_PANEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DFP display type </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44ad1962a730c65ae86adf85285b5e3fe5c" prot="public">
          <name>DISPLAY_TYPE_COMPONENT_VIDEO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Componment Video display type </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44aecf18dcce9017bc96ad10dda0c5f5d37" prot="public">
          <name>DISPLAY_TYPE_PROJECTOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Projector display type </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Different return types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="352" column="1" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="353" bodyend="360"/>
      </memberdef>
      <memberdef kind="enum" id="ADLXDefines_8h_1ae2d0250dc861156a468001600a2ee648" prot="public" static="no" strong="no">
        <type></type>
        <name>ADLX_DISPLAY_SCAN_TYPE</name>
        <enumvalue id="ADLXDefines_8h_1ae2d0250dc861156a468001600a2ee648aa26e5d6a224712b2542b07280bdab8e9" prot="public">
          <name>PROGRESSIVE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Progressive Mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ae2d0250dc861156a468001600a2ee648a855562021fc14e40c67913a5bb4701f7" prot="public">
          <name>INTERLACED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interlaced Mode </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Display scan type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="371" column="1" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="372" bodyend="375"/>
      </memberdef>
      <memberdef kind="enum" id="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14" prot="public" static="no" strong="no">
        <type></type>
        <name>ADLX_GAMUT_SPACE</name>
        <enumvalue id="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14a6d2c65316d5efd3aee2454740657b8be" prot="public">
          <name>GAMUT_SPACE_CCIR_709</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCIR 709 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14ab1622dfde8daae9398a0a245c4798935" prot="public">
          <name>GAMUT_SPACE_CCIR_601</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCIR 601 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14a81ccdc7e5afcb1abd12340eb5fa47301" prot="public">
          <name>GAMUT_SPACE_ADOBE_RGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Adobe RGB </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14a5d7ae134656c91cc92e397e996fadd58" prot="public">
          <name>GAMUT_SPACE_CIE_RGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>sRGB </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14adff8da50fc2428d3274deb186a9e363d" prot="public">
          <name>GAMUT_SPACE_CCIR_2020</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCIR 2020 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14a74d331b6c316667fc652ce6bf76daf49" prot="public">
          <name>GAMUT_SPACE_CUSTOM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Custom gamut space </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Predefined gamut space define. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="386" column="1" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="387" bodyend="394"/>
      </memberdef>
      <memberdef kind="enum" id="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeab" prot="public" static="no" strong="no">
        <type></type>
        <name>ADLX_WHITE_POINT</name>
        <enumvalue id="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeabafda8bf3f312e8533c6aaaf0e44b5701d" prot="public">
          <name>WHITE_POINT_5000K</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>white point 5000k </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeaba0a2e69d2af462123badbcc91a067112d" prot="public">
          <name>WHITE_POINT_6500K</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>white point 6500k </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeaba585f24c3732b31a2ad036afeff29f6f7" prot="public">
          <name>WHITE_POINT_7500K</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>white point 7500k </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeabab5870509771cc459d778cabc1dafa86c" prot="public">
          <name>WHITE_POINT_9300K</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>white point 9300k </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeaba69d26e715baf519132af949a693f443c" prot="public">
          <name>WHITE_POINT_CUSTOM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>custom white point </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Standarded white point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="405" column="1" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="406" bodyend="412"/>
      </memberdef>
      <memberdef kind="enum" id="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fd" prot="public" static="no" strong="no">
        <type></type>
        <name>ADLX_GAMMA_TYPE</name>
        <enumvalue id="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fda09b024ff449662360c66ce18d20096fa" prot="public">
          <name>UNKNOW</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>unknow </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fdab58305a50c2081e5495293490cfa036c" prot="public">
          <name>DEGAMMA_RAMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Degamma Ramp way </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fda54f1acbc9507d4d16b8ded68349bf02d" prot="public">
          <name>REGAMMA_RAMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Regamma Ramp way </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fda6f3c2aa392675bf57c826a692753f6b5" prot="public">
          <name>DEGAMMA_COEFFICENTS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Degamma coefficients way </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fdad879c7f3c3a36717e1f2ead2cf565bfd" prot="public">
          <name>REGAMMA_COEFFICENTS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Regamma coefficients way </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Gamma type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="423" column="1" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="424" bodyend="430"/>
      </memberdef>
      <memberdef kind="enum" id="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37" prot="public" static="no" strong="no">
        <type></type>
        <name>ADLX_REGAMMA</name>
        <enumvalue id="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37ae54ad07efbe717c57efa04519043caa1" prot="public">
          <name>REGAMMA_UNKNOW</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>unknow re-gamma </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37a268fe77cd1a064f2b91b880308b71e17" prot="public">
          <name>REGAMMA_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>standard SRGB re-gamma applied </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37a596d84129b201ab2786e85b14c0199c4" prot="public">
          <name>REGAMMA_BP709</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BT709 re-gama </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37a6aa1c63d1c29e43404b254efb7eaecf7" prot="public">
          <name>REGAMMA_PQ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>PQ re-gamma curve applied </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37a2d7a4371ccb9efaedcd8509accc2f802" prot="public">
          <name>REGAMMA_PQ2084INTERIM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>PQ re-gamma curve applied, lower max nits </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37a08fb58309caca5ec6ee2d42a7644a448" prot="public">
          <name>REGAMMA_36</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>3.6 re-gamma </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>ADLX supported predefined re-gamma. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="441" column="1" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="442" bodyend="449"/>
      </memberdef>
      <memberdef kind="enum" id="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284" prot="public" static="no" strong="no">
        <type></type>
        <name>ADLX_DEGAMMA</name>
        <enumvalue id="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284a3a2f2d4ebf7a51711e4f06984fb7a2c6" prot="public">
          <name>DEGAMMA_UNKNOW</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>unknow de-gamma </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284ab67c45071c303e66a2a8e425e21a249a" prot="public">
          <name>DEGAMMA_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>standard SRGB de-gamma applied </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284a1b858422680e5f2d232e9bd2b54497d8" prot="public">
          <name>DEGAMMA_BP709</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BT709 de-gama </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284a84189832b719e7ef94d1ed10f9e26acf" prot="public">
          <name>DEGAMMA_PQ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>PQ de-gamma curve applied </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284a5860047eb405e41318d41e4db69f9a06" prot="public">
          <name>DEGAMMA_PQ2084INTERIM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>PQ de-gamma curve applied, lower max nits </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284a67700f0ac0f4a194a24b6c7f9906be8a" prot="public">
          <name>DEGAMMA_36</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>3.6 de-gamma </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>ADLX supported predefined de-gamma. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="461" column="1" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="462" bodyend="469"/>
      </memberdef>
      <memberdef kind="enum" id="ADLXDefines_8h_1ad96654bb381f13249bde2b8c54e51504" prot="public" static="no" strong="no">
        <type></type>
        <name>ADLX_3DLUT_SCE</name>
        <enumvalue id="ADLXDefines_8h_1ad96654bb381f13249bde2b8c54e51504a1530b0a0538b1672d105315644e333af" prot="public">
          <name>SCE_DISABLED</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Colour profile disabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ad96654bb381f13249bde2b8c54e51504aa2a2af767bc0c403a38347c374457d82" prot="public">
          <name>SCE_VIVIDGAMING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>vivid gaming colour profile </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ad96654bb381f13249bde2b8c54e51504a06297b74783e87d53ad2f332abaf0571" prot="public">
          <name>SCE_OLEDPOWERSAVING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>OLED power saving colour profile </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SCE - Selective Colour Enhuancement types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="480" column="1" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="481" bodyend="485"/>
      </memberdef>
      <memberdef kind="enum" id="ADLXDefines_8h_1ae896c86f4fc55efe4e866450e33465b1" prot="public" static="no" strong="no">
        <type></type>
        <name>ADLX_ORIENTATION</name>
        <enumvalue id="ADLXDefines_8h_1ae896c86f4fc55efe4e866450e33465b1aeffaa8f11bafc4c40b434f3b941eb1bf" prot="public">
          <name>ORIENTATION_LANDSCAPE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Landscape orientation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ae896c86f4fc55efe4e866450e33465b1acd00a965397a558275015a84f2f22dd5" prot="public">
          <name>ORIENTATION_PORTRAIT</name>
          <initializer>= 90</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Portrait orientation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ae896c86f4fc55efe4e866450e33465b1a29f5d104339a45621bab90f391ed3c84" prot="public">
          <name>ORIENTATION_LANDSCAPE_FLIPPED</name>
          <initializer>= 180</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Landscape (Flipped) orientation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1ae896c86f4fc55efe4e866450e33465b1a0c4dc7635db48ef031605d4411ab4513" prot="public">
          <name>ORIENTATION_PORTRAIT_FLIPPED</name>
          <initializer>= 270</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Portrait (Flipped) orientation </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Orientation options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="496" column="1" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="497" bodyend="502"/>
      </memberdef>
      <memberdef kind="enum" id="ADLXDefines_8h_1a83322f63ada9c973559376760f141b89" prot="public" static="no" strong="no">
        <type></type>
        <name>ADLX_DESKTOP_TYPE</name>
        <enumvalue id="ADLXDefines_8h_1a83322f63ada9c973559376760f141b89a03058f4b63d7d11fe6a5aa47154590a4" prot="public">
          <name>DESKTOP_SINGLE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Single display desktop: one display showing the entire desktop </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a83322f63ada9c973559376760f141b89ac96f7ed618b411fc68b0e1fe21f2e62c" prot="public">
          <name>DESKTOP_DUPLCATE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Duplicate desktop: two or mode displays each show the entire desktop </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ADLXDefines_8h_1a83322f63ada9c973559376760f141b89ac483eaf5310613780a7901e317b9b2a2" prot="public">
          <name>DESKTOP_EYEFINITY</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Eyefinity desktop: two or mode displays each show a portion of the desktop </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of desktops in respect to display composition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="513" column="1" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="513" bodyend="517"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ADLXDefines_8h_1a460278d9913c4386415ed4a7ef39afd7" prot="public" static="no">
        <type>int64_t</type>
        <definition>typedef int64_t adlx_int64</definition>
        <argsstring></argsstring>
        <name>adlx_int64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="90" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1abd92771e6d61812965634c05dbe8fca4" prot="public" static="no">
        <type>int32_t</type>
        <definition>typedef int32_t adlx_int32</definition>
        <argsstring></argsstring>
        <name>adlx_int32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="91" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1ada96c7e9db50fae4e3f93a35f08be2c2" prot="public" static="no">
        <type>int16_t</type>
        <definition>typedef int16_t adlx_int16</definition>
        <argsstring></argsstring>
        <name>adlx_int16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="92" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1a9889cfff3955a698fe431ec594c68209" prot="public" static="no">
        <type>int8_t</type>
        <definition>typedef int8_t adlx_int8</definition>
        <argsstring></argsstring>
        <name>adlx_int8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="93" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1aefc827e657b29c87c0f3de4af0313663" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t adlx_uint64</definition>
        <argsstring></argsstring>
        <name>adlx_uint64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="95" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1a9f14273da8e3f6900cd08cac968b3548" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t adlx_uint32</definition>
        <argsstring></argsstring>
        <name>adlx_uint32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="96" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1ab31ae109f021f2f6e2b5636ff687a163" prot="public" static="no">
        <type>uint16_t</type>
        <definition>typedef uint16_t adlx_uint16</definition>
        <argsstring></argsstring>
        <name>adlx_uint16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="97" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1a5d7f71295dccd5f783d415a51e80ed7d" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t adlx_uint8</definition>
        <argsstring></argsstring>
        <name>adlx_uint8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="98" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1ac86a3f6603ae052fda90ee22803007ea" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t adlx_size</definition>
        <argsstring></argsstring>
        <name>adlx_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="99" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1a7f46e6d7b35c5dd0c138ca00c2e98ef6" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* adlx_handle</definition>
        <argsstring></argsstring>
        <name>adlx_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="101" column="32" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1a4f00ef174139020b2c31154d1af6df19" prot="public" static="no">
        <type>double</type>
        <definition>typedef double adlx_double</definition>
        <argsstring></argsstring>
        <name>adlx_double</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="102" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1a0a3d2002a9b3b41cd17893985a85295f" prot="public" static="no">
        <type>float</type>
        <definition>typedef float adlx_float</definition>
        <argsstring></argsstring>
        <name>adlx_float</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="103" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1ad59bd512e1136c211dc9a1dfeef80b01" prot="public" static="no">
        <type>void</type>
        <definition>typedef void adlx_void</definition>
        <argsstring></argsstring>
        <name>adlx_void</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="105" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__ADLXDefs_1ga201851605e965b5eb54b45e81b95af70" prot="public" static="no">
        <type>long</type>
        <definition>adlx_long</definition>
        <argsstring></argsstring>
        <name>adlx_long</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The long. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="116" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1aab935edec574d195d71acbce1f509cf6" prot="public" static="no">
        <type><ref refid="ADLXDefines_8h_1abd92771e6d61812965634c05dbe8fca4" kindref="member">adlx_int32</ref></type>
        <definition>typedef adlx_int32 adlx_int</definition>
        <argsstring></argsstring>
        <name>adlx_int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="117" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1ad7323589132564cf1107a227bf11022c" prot="public" static="no">
        <type>unsigned long</type>
        <definition>typedef unsigned long adlx_ulong</definition>
        <argsstring></argsstring>
        <name>adlx_ulong</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="118" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1a448de12e2971d2271c10f35e0b4e47d9" prot="public" static="no">
        <type><ref refid="ADLXDefines_8h_1a9f14273da8e3f6900cd08cac968b3548" kindref="member">adlx_uint32</ref></type>
        <definition>typedef adlx_uint32 adlx_uint</definition>
        <argsstring></argsstring>
        <name>adlx_uint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="119" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1a62a44ee9ddbe8c36a67c2551371448ed" prot="public" static="no">
        <type>bool</type>
        <definition>typedef bool adlx_bool</definition>
        <argsstring></argsstring>
        <name>adlx_bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="122" column="33" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1a661f62b18e83b1f4c2d229d44c0ad7fc" prot="public" static="no">
        <type><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0" kindref="member">ADLX_RESULT</ref>(<ref refid="ADLXDefines_8h_1ae65e2f8bee9a29f8e00bf58746fa59a0" kindref="member">ADLX_CDECL_CALL</ref> *</type>
        <definition>typedef ADLX_RESULT(ADLX_CDECL_CALL * ADLXQueryVersion_Fn) (adlx_uint64 *pVersion)</definition>
        <argsstring>)(adlx_uint64 *pVersion)</argsstring>
        <name>ADLXQueryVersion_Fn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="521" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ADLXDefines_8h_1a9c630b468809c08e39b777ef38f1d27e" prot="public" static="no">
        <type>void(<ref refid="test_8h_1a5339814ff38733ae1fb89b372143a9e7" kindref="member">ADLX_STD_CALL</ref> *</type>
        <definition>typedef void(ADLX_STD_CALL * ADLX_ADL_Main_Memory_Free) (void **lpBuffer_)</definition>
        <argsstring>)(void **lpBuffer_)</argsstring>
        <name>ADLX_ADL_Main_Memory_Free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="522" column="9" bodyfile="D:/test/ADLX/Include/ADLXDefines.h" bodystart="522" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ADLXDefines_8h_1a71ff03c0c3b30813b0114c2239a4db6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__ADLXDefs_1ga201851605e965b5eb54b45e81b95af70" kindref="member">adlx_long</ref> <ref refid="ADLXDefines_8h_1ae65e2f8bee9a29f8e00bf58746fa59a0" kindref="member">ADLX_CDECL_CALL</ref></type>
        <definition>adlx_long ADLX_CDECL_CALL adlx_atomic_inc</definition>
        <argsstring>(adlx_long *X)</argsstring>
        <name>adlx_atomic_inc</name>
        <param>
          <type><ref refid="group__ADLXDefs_1ga201851605e965b5eb54b45e81b95af70" kindref="member">adlx_long</ref> *</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="152" column="29" declfile="D:/test/ADLX/Include/ADLXDefines.h" declline="152" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="ADLXDefines_8h_1a99fbeae2292b71ffedb5481c9542a824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__ADLXDefs_1ga201851605e965b5eb54b45e81b95af70" kindref="member">adlx_long</ref> <ref refid="ADLXDefines_8h_1ae65e2f8bee9a29f8e00bf58746fa59a0" kindref="member">ADLX_CDECL_CALL</ref></type>
        <definition>adlx_long ADLX_CDECL_CALL adlx_atomic_dec</definition>
        <argsstring>(adlx_long *X)</argsstring>
        <name>adlx_atomic_dec</name>
        <param>
          <type><ref refid="group__ADLXDefs_1ga201851605e965b5eb54b45e81b95af70" kindref="member">adlx_long</ref> *</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="153" column="29" declfile="D:/test/ADLX/Include/ADLXDefines.h" declline="153" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="ADLXDefines_8h_1a6f1a33cc2a6db35cb9ce6cb2ab4b21e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ADLXDefines_8h_1a7f46e6d7b35c5dd0c138ca00c2e98ef6" kindref="member">adlx_handle</ref></type>
        <definition>adlx_handle adlx_load_library</definition>
        <argsstring>(const wchar_t *filename)</argsstring>
        <name>adlx_load_library</name>
        <param>
          <type>const wchar_t *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="181" column="14" declfile="D:/test/ADLX/Include/ADLXDefines.h" declline="181" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="ADLXDefines_8h_1a7115be07847f9fdce1cd7ca7151cc697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="ADLXDefines_8h_1ae65e2f8bee9a29f8e00bf58746fa59a0" kindref="member">ADLX_CDECL_CALL</ref></type>
        <definition>int ADLX_CDECL_CALL adlx_free_library</definition>
        <argsstring>(adlx_handle module)</argsstring>
        <name>adlx_free_library</name>
        <param>
          <type><ref refid="ADLXDefines_8h_1a7f46e6d7b35c5dd0c138ca00c2e98ef6" kindref="member">adlx_handle</ref></type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="201" column="29" declfile="D:/test/ADLX/Include/ADLXDefines.h" declline="201" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="ADLXDefines_8h_1a8d54c008c70230f755c111ef3f17e290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *<ref refid="ADLXDefines_8h_1ae65e2f8bee9a29f8e00bf58746fa59a0" kindref="member">ADLX_CDECL_CALL</ref></type>
        <definition>void* ADLX_CDECL_CALL adlx_get_proc_address</definition>
        <argsstring>(adlx_handle module, const char *procName)</argsstring>
        <name>adlx_get_proc_address</name>
        <param>
          <type><ref refid="ADLXDefines_8h_1a7f46e6d7b35c5dd0c138ca00c2e98ef6" kindref="member">adlx_handle</ref></type>
          <declname>module</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>procName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/test/ADLX/Include/ADLXDefines.h" line="222" column="28" declfile="D:/test/ADLX/Include/ADLXDefines.h" declline="222" declcolumn="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Notice<sp/>Regarding<sp/>Standards.<sp/><sp/>AMD<sp/>does<sp/>not<sp/>provide<sp/>a<sp/>license<sp/>or<sp/>sublicense<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>any<sp/>Intellectual<sp/>Property<sp/>Rights<sp/>relating<sp/>to<sp/>any<sp/>standards<sp/>For<sp/>clarity,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>will<sp/>pay<sp/>any<sp/>royalties<sp/>due<sp/>for<sp/>such<sp/>third<sp/>party<sp/>technologies<sp/>that<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>owed<sp/>as<sp/>a<sp/>result<sp/>of<sp/>AMD<sp/>providing<sp/>the<sp/>Software<sp/>to<sp/>you.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MIT<sp/>license<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Advanced<sp/>Micro<sp/>Devices,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ADLX_DEFINES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_DEFINES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//Version<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="ADLXDefines_8h_1acbf896f8442c1b98285723ef70df2dc2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_MAKE_FULL_VER(VERSION_MAJOR,<sp/>VERSION_MINOR,<sp/>VERSION_RELEASE,<sp/>VERSION_BUILD_NUM)<sp/><sp/><sp/><sp/>(<sp/>((adlx_uint64)(VERSION_MAJOR)<sp/>&lt;&lt;<sp/>48ull)<sp/>|<sp/>((adlx_uint64)(VERSION_MINOR)<sp/>&lt;&lt;<sp/>32ull)<sp/>|<sp/>((adlx_uint64)(VERSION_RELEASE)<sp/>&lt;&lt;<sp/>16ull)<sp/><sp/>|<sp/>(adlx_uint64)(VERSION_BUILD_NUM))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="ADLXDefines_8h_1ab69830799ad6b447904567f7a1a777d8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_VER_MAJOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="ADLXDefines_8h_1a570f43462e6bc58be96a7c29057925de" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_VER_MINOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="ADLXDefines_8h_1ac7d834b2f2a11818032368c97eb1c961" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_VER_RELEASE<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="ADLXDefines_8h_1afd4670105c56d2809246aa7ed5a40a08" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_VER_BUILD_NUM<sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="ADLXDefines_8h_1a14dd7294b63695d25406ef8b622f0585" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_FULL_VERSION<sp/>ADLX_MAKE_FULL_VER(ADLX_VER_MAJOR,<sp/>ADLX_VER_MINOR,<sp/>ADLX_VER_RELEASE,<sp/>ADLX_VER_BUILD_NUM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//ADLX<sp/>Platform<sp/>-<sp/>platform-specific<sp/>defines,<sp/>such<sp/>as<sp/>types<sp/>and<sp/>C/C++<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>platform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX<sp/>simple<sp/>data<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="ADLXDefines_8h_1a460278d9913c4386415ed4a7ef39afd7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a460278d9913c4386415ed4a7ef39afd7" kindref="member">adlx_int64</ref>;</highlight></codeline>
<codeline lineno="91" refid="ADLXDefines_8h_1abd92771e6d61812965634c05dbe8fca4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1abd92771e6d61812965634c05dbe8fca4" kindref="member">adlx_int32</ref>;</highlight></codeline>
<codeline lineno="92" refid="ADLXDefines_8h_1ada96c7e9db50fae4e3f93a35f08be2c2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ada96c7e9db50fae4e3f93a35f08be2c2" kindref="member">adlx_int16</ref>;</highlight></codeline>
<codeline lineno="93" refid="ADLXDefines_8h_1a9889cfff3955a698fe431ec594c68209" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a9889cfff3955a698fe431ec594c68209" kindref="member">adlx_int8</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="ADLXDefines_8h_1aefc827e657b29c87c0f3de4af0313663" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1aefc827e657b29c87c0f3de4af0313663" kindref="member">adlx_uint64</ref>;</highlight></codeline>
<codeline lineno="96" refid="ADLXDefines_8h_1a9f14273da8e3f6900cd08cac968b3548" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a9f14273da8e3f6900cd08cac968b3548" kindref="member">adlx_uint32</ref>;</highlight></codeline>
<codeline lineno="97" refid="ADLXDefines_8h_1ab31ae109f021f2f6e2b5636ff687a163" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ab31ae109f021f2f6e2b5636ff687a163" kindref="member">adlx_uint16</ref>;</highlight></codeline>
<codeline lineno="98" refid="ADLXDefines_8h_1a5d7f71295dccd5f783d415a51e80ed7d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a5d7f71295dccd5f783d415a51e80ed7d" kindref="member">adlx_uint8</ref>;</highlight></codeline>
<codeline lineno="99" refid="ADLXDefines_8h_1ac86a3f6603ae052fda90ee22803007ea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ac86a3f6603ae052fda90ee22803007ea" kindref="member">adlx_size</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="ADLXDefines_8h_1a7f46e6d7b35c5dd0c138ca00c2e98ef6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a7f46e6d7b35c5dd0c138ca00c2e98ef6" kindref="member">adlx_handle</ref>;</highlight></codeline>
<codeline lineno="102" refid="ADLXDefines_8h_1a4f00ef174139020b2c31154d1af6df19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a4f00ef174139020b2c31154d1af6df19" kindref="member">adlx_double</ref>;</highlight></codeline>
<codeline lineno="103" refid="ADLXDefines_8h_1a0a3d2002a9b3b41cd17893985a85295f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a0a3d2002a9b3b41cd17893985a85295f" kindref="member">adlx_float</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="ADLXDefines_8h_1ad59bd512e1136c211dc9a1dfeef80b01" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ad59bd512e1136c211dc9a1dfeef80b01" kindref="member">adlx_void</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="group__ADLXDefs_1ga201851605e965b5eb54b45e81b95af70" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ADLXDefs_1ga201851605e965b5eb54b45e81b95af70" kindref="member">adlx_long</ref>;</highlight></codeline>
<codeline lineno="117" refid="ADLXDefines_8h_1aab935edec574d195d71acbce1f509cf6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1abd92771e6d61812965634c05dbe8fca4" kindref="member">adlx_int32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1aab935edec574d195d71acbce1f509cf6" kindref="member">adlx_int</ref>;</highlight></codeline>
<codeline lineno="118" refid="ADLXDefines_8h_1ad7323589132564cf1107a227bf11022c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ad7323589132564cf1107a227bf11022c" kindref="member">adlx_ulong</ref>;</highlight></codeline>
<codeline lineno="119" refid="ADLXDefines_8h_1a448de12e2971d2271c10f35e0b4e47d9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a9f14273da8e3f6900cd08cac968b3548" kindref="member">adlx_uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a448de12e2971d2271c10f35e0b4e47d9" kindref="member">adlx_uint</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="ADLXDefines_8h_1a62a44ee9ddbe8c36a67c2551371448ed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a62a44ee9ddbe8c36a67c2551371448ed" kindref="member">adlx_bool</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a5d7f71295dccd5f783d415a51e80ed7d" kindref="member">adlx_uint8</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a62a44ee9ddbe8c36a67c2551371448ed" kindref="member">adlx_bool</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>false<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX<sp/>simple<sp/>data<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//Calling<sp/>standards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>Export<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Microsoft<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="ADLXDefines_8h_1aae8468f2e510664116494bfde13e3db8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_CORE_LINK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__declspec(dllexport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="ADLXDefines_8h_1a5339814ff38733ae1fb89b372143a9e7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_STD_CALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__stdcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="ADLXDefines_8h_1ae65e2f8bee9a29f8e00bf58746fa59a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_CDECL_CALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__cdecl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="ADLXDefines_8h_1ae0545abb23d6f4a463d48723ff8038c1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_FAST_CALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__fastcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="ADLXDefines_8h_1a1fb46c1b483e91e0611a6cd2aca842b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_INLINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="ADLXDefines_8h_1a8f571ca7d02a51be595db45ba715f90c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_FORCEINLINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__forceinline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="ADLXDefines_8h_1a5e8ce4ed67dbfc5e6a6e691ebb5a1091" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_NO_VTABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__declspec(novtable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>EXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>IMPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning<sp/>Unknown<sp/>dynamic<sp/>link<sp/>import/export<sp/>semantics.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>Export<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//Various<sp/>platform<sp/>APIs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>Platform<sp/>APIs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="ADLXDefines_8h_1a71ff03c0c3b30813b0114c2239a4db6d" refkind="member"><highlight class="normal"><ref refid="group__ADLXDefs_1ga201851605e965b5eb54b45e81b95af70" kindref="member">adlx_long</ref><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae65e2f8bee9a29f8e00bf58746fa59a0" kindref="member">ADLX_CDECL_CALL</ref><sp/><ref refid="ADLXDefines_8h_1a71ff03c0c3b30813b0114c2239a4db6d" kindref="member">adlx_atomic_inc</ref><sp/>(<ref refid="group__ADLXDefs_1ga201851605e965b5eb54b45e81b95af70" kindref="member">adlx_long</ref>*<sp/>X);</highlight></codeline>
<codeline lineno="153" refid="ADLXDefines_8h_1a99fbeae2292b71ffedb5481c9542a824" refkind="member"><highlight class="normal"><ref refid="group__ADLXDefs_1ga201851605e965b5eb54b45e81b95af70" kindref="member">adlx_long</ref><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae65e2f8bee9a29f8e00bf58746fa59a0" kindref="member">ADLX_CDECL_CALL</ref><sp/><ref refid="ADLXDefines_8h_1a99fbeae2292b71ffedb5481c9542a824" kindref="member">adlx_atomic_dec</ref><sp/>(<ref refid="group__ADLXDefs_1ga201851605e965b5eb54b45e81b95af70" kindref="member">adlx_long</ref>*<sp/>X);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="ADLXDefines_8h_1a6f1a33cc2a6db35cb9ce6cb2ab4b21e4" refkind="member"><highlight class="normal"><ref refid="ADLXDefines_8h_1a7f46e6d7b35c5dd0c138ca00c2e98ef6" kindref="member">adlx_handle</ref><sp/><sp/><ref refid="ADLXDefines_8h_1a6f1a33cc2a6db35cb9ce6cb2ab4b21e4" kindref="member">adlx_load_library</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>filename);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="ADLXDefines_8h_1a7115be07847f9fdce1cd7ca7151cc697" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae65e2f8bee9a29f8e00bf58746fa59a0" kindref="member">ADLX_CDECL_CALL</ref><sp/><ref refid="ADLXDefines_8h_1a7115be07847f9fdce1cd7ca7151cc697" kindref="member">adlx_free_library</ref><sp/>(<ref refid="ADLXDefines_8h_1a7f46e6d7b35c5dd0c138ca00c2e98ef6" kindref="member">adlx_handle</ref><sp/>module);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="ADLXDefines_8h_1a8d54c008c70230f755c111ef3f17e290" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae65e2f8bee9a29f8e00bf58746fa59a0" kindref="member">ADLX_CDECL_CALL</ref><sp/><ref refid="ADLXDefines_8h_1a8d54c008c70230f755c111ef3f17e290" kindref="member">adlx_get_proc_address</ref><sp/>(<ref refid="ADLXDefines_8h_1a7f46e6d7b35c5dd0c138ca00c2e98ef6" kindref="member">adlx_handle</ref><sp/>module,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>procName);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>Platform<sp/>APIs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="ADLXDefines_8h_1aad41a85fa23d505e4f124d6816f3cfbd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>adlx_countof(x)<sp/>(sizeof(x)<sp/>/<sp/>sizeof(x[0]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>platform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//ADLX<sp/>data<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX<sp/>data<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_RESULT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245" refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a72597a9998fa21f37bfcaddd9cafaed5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a72597a9998fa21f37bfcaddd9cafaed5" kindref="member">ADLX_OK</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246" refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0aa559b325fb345d9152b653588511db5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0aa559b325fb345d9152b653588511db5c" kindref="member">ADLX_FAIL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247" refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0af44fabfdb08be14d11a6d2f732c856b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0af44fabfdb08be14d11a6d2f732c856b7" kindref="member">ADLX_INVALID_ARGS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248" refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0ac571770e655e2cf695827fb4a15e35c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0ac571770e655e2cf695827fb4a15e35c0" kindref="member">ADLX_BAD_VER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249" refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a8fc7732baab75a3c05f77d1bf4a70d20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a8fc7732baab75a3c05f77d1bf4a70d20" kindref="member">ADLX_UNKNOWN_INTERFACE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250" refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0ae5f780950728a255730b0280499acb72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0ae5f780950728a255730b0280499acb72" kindref="member">ADLX_TERMINATED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251" refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a8de27968a45d7be7db0dd081935b9c2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a8de27968a45d7be7db0dd081935b9c2a" kindref="member">ADLX_ADL_INITI_ERROR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252" refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a407e7fb76cdc6900948ba09adbc55a99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a407e7fb76cdc6900948ba09adbc55a99" kindref="member">ADLX_NOT_FOUND</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253" refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a447f8d425a70ea68f944e0678206e74e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a447f8d425a70ea68f944e0678206e74e" kindref="member">ADLX_INVALID_OBJECT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a0f2aa9a92254cd0fe4b705b0f77ca314" kindref="member">ADLX_ORPHAN_OBJECTS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255" refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a0f2aa9a92254cd0fe4b705b0f77ca314" refkind="member"><highlight class="normal">}<ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0" kindref="member">ADLX_RESULT</ref>;</highlight></codeline>
<codeline lineno="256" refid="ADLXDefines_8h_1aa6d4b27e28dc60797e52e901ad4e9ced" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_SUCCEEDED(x)<sp/>(ADLX_OK<sp/>==<sp/>x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="ADLXDefines_8h_1a6ea0e7f02e40768a1e47cb60e0e6f482" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_FAILED(x)<sp/>(ADLX_OK<sp/>!=<sp/>x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_RESULT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_HGType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="ADLXDefines_8h_1a20ebb33d785b59e04eabe454d0d275a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271" refid="ADLXDefines_8h_1a20ebb33d785b59e04eabe454d0d275a7ac157bdf0b85a40d2619cbc8bc1ae5fe2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a20ebb33d785b59e04eabe454d0d275a7ac157bdf0b85a40d2619cbc8bc1ae5fe2" kindref="member">NONE</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272" refid="ADLXDefines_8h_1a20ebb33d785b59e04eabe454d0d275a7ac1f5c308ff9610759dbc1415b20df568" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a20ebb33d785b59e04eabe454d0d275a7ac1f5c308ff9610759dbc1415b20df568" kindref="member">AMD</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273" refid="ADLXDefines_8h_1a20ebb33d785b59e04eabe454d0d275a7adbf1dee1b8cd7ea3c82661943c7b74f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a20ebb33d785b59e04eabe454d0d275a7adbf1dee1b8cd7ea3c82661943c7b74f4" kindref="member">OTHER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal">}<sp/><ref refid="ADLXDefines_8h_1a20ebb33d785b59e04eabe454d0d275a7" kindref="member">ADLX_HGType</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_HGType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_ASICFAMTYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287" refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2ca3545ff1a23cd34b9adbc8c665a5951be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2ca3545ff1a23cd34b9adbc8c665a5951be" kindref="member">ASIC_UNDEFINED</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288" refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2ca0dc8ed090699f28b662b7c765274cf9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2ca0dc8ed090699f28b662b7c765274cf9e" kindref="member">ASIC_RADEON</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289" refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2ca80725f02993ea38bb16b978d9226fd0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2ca80725f02993ea38bb16b978d9226fd0b" kindref="member">ASIC_FIREPRO</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290" refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2ca0ad611b8d03595461b2e81edb4ca5195" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2ca0ad611b8d03595461b2e81edb4ca5195" kindref="member">ASIC_FIREMV</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291" refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2cadbd861ee855957a3422ae76d20b71d7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2cadbd861ee855957a3422ae76d20b71d7c" kindref="member">ASIC_FIRESTREAM</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292" refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2ca96ee7dab50a7cdb839879acb9a4e64e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2ca96ee7dab50a7cdb839879acb9a4e64e3" kindref="member">ASIC_FUSION</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293" refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2cac6b09b34c87726a358773f7fad37ffc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2cac6b09b34c87726a358773f7fad37ffc8" kindref="member">ASIC_EMBEDDED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal">}<sp/><ref refid="ADLXDefines_8h_1ad1dde1627a5cd8fb9386ad7691e2ca2c" kindref="member">ADLX_ASICFAMTYPE</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_ASICFAMTYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_GPUTYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="ADLXDefines_8h_1a0a07dec967855727a17681c44ed5db6f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307" refid="ADLXDefines_8h_1a0a07dec967855727a17681c44ed5db6face1bf6380e6eb87aec4f7879f4d117c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a0a07dec967855727a17681c44ed5db6face1bf6380e6eb87aec4f7879f4d117c9" kindref="member">GPUTYPE_UNDEFINED</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308" refid="ADLXDefines_8h_1a0a07dec967855727a17681c44ed5db6faf54e5303fc76110709462383628c0d5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a0a07dec967855727a17681c44ed5db6faf54e5303fc76110709462383628c0d5b" kindref="member">GPUTYPE_INTEGRATED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309" refid="ADLXDefines_8h_1a0a07dec967855727a17681c44ed5db6fa5aa5ebc90d45840cfadec5bd25e50423" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a0a07dec967855727a17681c44ed5db6fa5aa5ebc90d45840cfadec5bd25e50423" kindref="member">GPUTYPE_DISCRETE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal">}<sp/><ref refid="ADLXDefines_8h_1a0a07dec967855727a17681c44ed5db6f" kindref="member">ADLX_GPUTYPE</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_GPUTYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_DISPLAY_CONTYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a294e0c1bbb3ca9ccd0b4c9872f697f66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a294e0c1bbb3ca9ccd0b4c9872f697f66" kindref="member">DISPLAY_CONTYPE_UNKNOWN</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="324" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8afb7606e80d94f991f4adf02a785de52e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8afb7606e80d94f991f4adf02a785de52e" kindref="member">DISPLAY_CONTYPE_VGA</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="325" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a66e9c3dc1143b21d451f1eeeda928922" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a66e9c3dc1143b21d451f1eeeda928922" kindref="member">DISPLAY_CONTYPE_DVI_D</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="326" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a976f94a4c526e32729689885d12b4974" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a976f94a4c526e32729689885d12b4974" kindref="member">DISPLAY_CONTYPE_DVI_I</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="327" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8acd8ebf44ecb270f609f714fc7498dcc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8acd8ebf44ecb270f609f714fc7498dcc7" kindref="member">DISPLAY_CONTYPE_ATICVDONGLE_NTSC</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="328" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a7db4f3939cd75af1bd6b6f9145ed922a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a7db4f3939cd75af1bd6b6f9145ed922a" kindref="member">DISPLAY_CONTYPE_ATICVDONGLE_JPN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a0ade514509e706736405f5dfd8a2bded" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a0ade514509e706736405f5dfd8a2bded" kindref="member">DISPLAY_CONTYPE_ATICVDONGLE_NONI2C_JPN</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="330" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a6e40beb2a47876f713c59f8f3ca6c4c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a6e40beb2a47876f713c59f8f3ca6c4c3" kindref="member">DISPLAY_CONTYPE_ATICVDONGLE_NONI2C_NTSC</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a34fc9104608a5827f65b4966c53a215e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a34fc9104608a5827f65b4966c53a215e" kindref="member">DISPLAY_CONTYPE_PROPRIETARY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a0ea53d6c677500162804e524be36389e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a0ea53d6c677500162804e524be36389e" kindref="member">DISPLAY_CONTYPE_HDMI_TYPE_A</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="333" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a0f343261982b3c21d374c522e94dbf99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a0f343261982b3c21d374c522e94dbf99" kindref="member">DISPLAY_CONTYPE_HDMI_TYPE_B</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8ab0d21daf08250dd0addd6d38c6bde568" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8ab0d21daf08250dd0addd6d38c6bde568" kindref="member">DISPLAY_CONTYPE_SVIDEO</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8adb930735bf83ac951478cfe1e48e988b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8adb930735bf83ac951478cfe1e48e988b" kindref="member">DISPLAY_CONTYPE_COMPOSITE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="336" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a6115b6cde3b24f5c0f1f30a551c6f302" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a6115b6cde3b24f5c0f1f30a551c6f302" kindref="member">DISPLAY_CONTYPE_RCA_3COMPONENT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="337" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a8b7f2b83c5165a353b89c8ee30f00926" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a8b7f2b83c5165a353b89c8ee30f00926" kindref="member">DISPLAY_CONTYPE_DISPLAYPORT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a6e95611aba096c0c4e9fc4d39fa5b1aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a6e95611aba096c0c4e9fc4d39fa5b1aa" kindref="member">DISPLAY_CONTYPE_EDP</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="339" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a0dcdd2ed087cd3a4dd1deaa4be25e20c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8a0dcdd2ed087cd3a4dd1deaa4be25e20c" kindref="member">DISPLAY_CONTYPE_WIRELESSDISPLAY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8abcdfb70a8ce8756085bc779863d633cb" kindref="member">DISPLAY_CONTYPE_USB_TYPE_C</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="341" refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8abcdfb70a8ce8756085bc779863d633cb" refkind="member"><highlight class="normal">}<ref refid="ADLXDefines_8h_1a39f5a8d2a97234af57cc82fb3c09e0e8" kindref="member">ADLX_DISPLAY_CONTYPE</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_DISPLAY_CONTYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_DISPLAY_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354" refid="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44aa2fa6d64ccb655bb744838972531f814" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44aa2fa6d64ccb655bb744838972531f814" kindref="member">DISPLAY_TYPE_MONITOR</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="355" refid="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44a8b6bf038d0bc3fa0407ec57552fb6c3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44a8b6bf038d0bc3fa0407ec57552fb6c3a" kindref="member">DISPLAY_TYPE_TELEVISION</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356" refid="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44a95122594fce234a2f413fa5bacfbb0b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44a95122594fce234a2f413fa5bacfbb0b8" kindref="member">DISPLAY_TYPE_LCD_PANEL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357" refid="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44a2e71d866e8fc16c2142042a063cf5c14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44a2e71d866e8fc16c2142042a063cf5c14" kindref="member">DISPLAY_TYPE_DIGITAL_FLAT_PANEL</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="358" refid="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44ad1962a730c65ae86adf85285b5e3fe5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44ad1962a730c65ae86adf85285b5e3fe5c" kindref="member">DISPLAY_TYPE_COMPONENT_VIDEO</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44aecf18dcce9017bc96ad10dda0c5f5d37" kindref="member">DISPLAY_TYPE_PROJECTOR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360" refid="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44aecf18dcce9017bc96ad10dda0c5f5d37" refkind="member"><highlight class="normal">}<ref refid="ADLXDefines_8h_1ae7e516225131af0ff164e9384d8d0a44" kindref="member">ADLX_DISPLAY_TYPE</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_DISPLAY_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_DISPLAY_SCAN_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="ADLXDefines_8h_1ae2d0250dc861156a468001600a2ee648" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373" refid="ADLXDefines_8h_1ae2d0250dc861156a468001600a2ee648aa26e5d6a224712b2542b07280bdab8e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae2d0250dc861156a468001600a2ee648aa26e5d6a224712b2542b07280bdab8e9" kindref="member">PROGRESSIVE</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae2d0250dc861156a468001600a2ee648a855562021fc14e40c67913a5bb4701f7" kindref="member">INTERLACED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375" refid="ADLXDefines_8h_1ae2d0250dc861156a468001600a2ee648a855562021fc14e40c67913a5bb4701f7" refkind="member"><highlight class="normal">}<ref refid="ADLXDefines_8h_1ae2d0250dc861156a468001600a2ee648" kindref="member">ADLX_DISPLAY_SCAN_TYPE</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_DISPLAY_SCAN_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_GAMUT_SPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388" refid="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14a6d2c65316d5efd3aee2454740657b8be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14a6d2c65316d5efd3aee2454740657b8be" kindref="member">GAMUT_SPACE_CCIR_709</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389" refid="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14ab1622dfde8daae9398a0a245c4798935" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14ab1622dfde8daae9398a0a245c4798935" kindref="member">GAMUT_SPACE_CCIR_601</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="390" refid="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14a81ccdc7e5afcb1abd12340eb5fa47301" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14a81ccdc7e5afcb1abd12340eb5fa47301" kindref="member">GAMUT_SPACE_ADOBE_RGB</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391" refid="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14a5d7ae134656c91cc92e397e996fadd58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14a5d7ae134656c91cc92e397e996fadd58" kindref="member">GAMUT_SPACE_CIE_RGB</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="392" refid="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14adff8da50fc2428d3274deb186a9e363d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14adff8da50fc2428d3274deb186a9e363d" kindref="member">GAMUT_SPACE_CCIR_2020</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14a74d331b6c316667fc652ce6bf76daf49" kindref="member">GAMUT_SPACE_CUSTOM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="394" refid="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14a74d331b6c316667fc652ce6bf76daf49" refkind="member"><highlight class="normal">}<sp/><ref refid="ADLXDefines_8h_1a46dff86075115b139c1c72f447e94e14" kindref="member">ADLX_GAMUT_SPACE</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_GAMUT_SPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_WHITE_POINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407" refid="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeabafda8bf3f312e8533c6aaaf0e44b5701d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeabafda8bf3f312e8533c6aaaf0e44b5701d" kindref="member">WHITE_POINT_5000K</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="408" refid="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeaba0a2e69d2af462123badbcc91a067112d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeaba0a2e69d2af462123badbcc91a067112d" kindref="member">WHITE_POINT_6500K</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="409" refid="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeaba585f24c3732b31a2ad036afeff29f6f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeaba585f24c3732b31a2ad036afeff29f6f7" kindref="member">WHITE_POINT_7500K</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410" refid="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeabab5870509771cc459d778cabc1dafa86c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeabab5870509771cc459d778cabc1dafa86c" kindref="member">WHITE_POINT_9300K</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeaba69d26e715baf519132af949a693f443c" kindref="member">WHITE_POINT_CUSTOM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="412" refid="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeaba69d26e715baf519132af949a693f443c" refkind="member"><highlight class="normal">}<sp/><ref refid="ADLXDefines_8h_1afb56c4b91425c281009c447ccb1feeab" kindref="member">ADLX_WHITE_POINT</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_WHITE_POINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_GAMMA_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425" refid="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fda09b024ff449662360c66ce18d20096fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fda09b024ff449662360c66ce18d20096fa" kindref="member">UNKNOW</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="426" refid="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fdab58305a50c2081e5495293490cfa036c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fdab58305a50c2081e5495293490cfa036c" kindref="member">DEGAMMA_RAMP</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="427" refid="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fda54f1acbc9507d4d16b8ded68349bf02d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fda54f1acbc9507d4d16b8ded68349bf02d" kindref="member">REGAMMA_RAMP</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="428" refid="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fda6f3c2aa392675bf57c826a692753f6b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fda6f3c2aa392675bf57c826a692753f6b5" kindref="member">DEGAMMA_COEFFICENTS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fdad879c7f3c3a36717e1f2ead2cf565bfd" kindref="member">REGAMMA_COEFFICENTS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="430" refid="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fdad879c7f3c3a36717e1f2ead2cf565bfd" refkind="member"><highlight class="normal">}<sp/><ref refid="ADLXDefines_8h_1a87f8763d8496a4e5ec84964e149144fd" kindref="member">ADLX_GAMMA_TYPE</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_GAMMA_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_REGAMMA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443" refid="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37ae54ad07efbe717c57efa04519043caa1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37ae54ad07efbe717c57efa04519043caa1" kindref="member">REGAMMA_UNKNOW</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="444" refid="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37a268fe77cd1a064f2b91b880308b71e17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37a268fe77cd1a064f2b91b880308b71e17" kindref="member">REGAMMA_SRGB</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="445" refid="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37a596d84129b201ab2786e85b14c0199c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37a596d84129b201ab2786e85b14c0199c4" kindref="member">REGAMMA_BP709</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="446" refid="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37a6aa1c63d1c29e43404b254efb7eaecf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37a6aa1c63d1c29e43404b254efb7eaecf7" kindref="member">REGAMMA_PQ</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="447" refid="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37a2d7a4371ccb9efaedcd8509accc2f802" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37a2d7a4371ccb9efaedcd8509accc2f802" kindref="member">REGAMMA_PQ2084INTERIM</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37a08fb58309caca5ec6ee2d42a7644a448" kindref="member">REGAMMA_36</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="449" refid="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37a08fb58309caca5ec6ee2d42a7644a448" refkind="member"><highlight class="normal">}<sp/><ref refid="ADLXDefines_8h_1a4ac9bb696db7c200013f95c88abe7b37" kindref="member">ADLX_REGAMMA</ref>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_REGAMMA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_DEGAMMA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Predefine<sp/>degamma.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463" refid="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284a3a2f2d4ebf7a51711e4f06984fb7a2c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284a3a2f2d4ebf7a51711e4f06984fb7a2c6" kindref="member">DEGAMMA_UNKNOW</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="464" refid="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284ab67c45071c303e66a2a8e425e21a249a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284ab67c45071c303e66a2a8e425e21a249a" kindref="member">DEGAMMA_SRGB</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="465" refid="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284a1b858422680e5f2d232e9bd2b54497d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284a1b858422680e5f2d232e9bd2b54497d8" kindref="member">DEGAMMA_BP709</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="466" refid="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284a84189832b719e7ef94d1ed10f9e26acf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284a84189832b719e7ef94d1ed10f9e26acf" kindref="member">DEGAMMA_PQ</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="467" refid="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284a5860047eb405e41318d41e4db69f9a06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284a5860047eb405e41318d41e4db69f9a06" kindref="member">DEGAMMA_PQ2084INTERIM</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284a67700f0ac0f4a194a24b6c7f9906be8a" kindref="member">DEGAMMA_36</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="469" refid="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284a67700f0ac0f4a194a24b6c7f9906be8a" refkind="member"><highlight class="normal">}<sp/><ref refid="ADLXDefines_8h_1a36fa57dc0d84e80f7c6e0c7d565dc284" kindref="member">ADLX_DEGAMMA</ref>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_DEGAMMA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_3DLUT_SCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="ADLXDefines_8h_1ad96654bb381f13249bde2b8c54e51504" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482" refid="ADLXDefines_8h_1ad96654bb381f13249bde2b8c54e51504a1530b0a0538b1672d105315644e333af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ad96654bb381f13249bde2b8c54e51504a1530b0a0538b1672d105315644e333af" kindref="member">SCE_DISABLED</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="483" refid="ADLXDefines_8h_1ad96654bb381f13249bde2b8c54e51504aa2a2af767bc0c403a38347c374457d82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ad96654bb381f13249bde2b8c54e51504aa2a2af767bc0c403a38347c374457d82" kindref="member">SCE_VIVIDGAMING</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ad96654bb381f13249bde2b8c54e51504a06297b74783e87d53ad2f332abaf0571" kindref="member">SCE_OLEDPOWERSAVING</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="485" refid="ADLXDefines_8h_1ad96654bb381f13249bde2b8c54e51504a06297b74783e87d53ad2f332abaf0571" refkind="member"><highlight class="normal">}<sp/><ref refid="ADLXDefines_8h_1ad96654bb381f13249bde2b8c54e51504" kindref="member">ADLX_3DLUT_SCE</ref>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_3DLUT_SCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_ORIENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="ADLXDefines_8h_1ae896c86f4fc55efe4e866450e33465b1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="498" refid="ADLXDefines_8h_1ae896c86f4fc55efe4e866450e33465b1aeffaa8f11bafc4c40b434f3b941eb1bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae896c86f4fc55efe4e866450e33465b1aeffaa8f11bafc4c40b434f3b941eb1bf" kindref="member">ORIENTATION_LANDSCAPE</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="499" refid="ADLXDefines_8h_1ae896c86f4fc55efe4e866450e33465b1acd00a965397a558275015a84f2f22dd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae896c86f4fc55efe4e866450e33465b1acd00a965397a558275015a84f2f22dd5" kindref="member">ORIENTATION_PORTRAIT</ref><sp/>=<sp/>90,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="500" refid="ADLXDefines_8h_1ae896c86f4fc55efe4e866450e33465b1a29f5d104339a45621bab90f391ed3c84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae896c86f4fc55efe4e866450e33465b1a29f5d104339a45621bab90f391ed3c84" kindref="member">ORIENTATION_LANDSCAPE_FLIPPED</ref><sp/>=<sp/>180,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="501" refid="ADLXDefines_8h_1ae896c86f4fc55efe4e866450e33465b1a0c4dc7635db48ef031605d4411ab4513" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1ae896c86f4fc55efe4e866450e33465b1a0c4dc7635db48ef031605d4411ab4513" kindref="member">ORIENTATION_PORTRAIT_FLIPPED</ref><sp/>=<sp/>270,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal">}<sp/><ref refid="ADLXDefines_8h_1ae896c86f4fc55efe4e866450e33465b1" kindref="member">ADLX_ORIENTATION</ref>;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_ORIENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_DESKTOP_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="ADLXDefines_8h_1a83322f63ada9c973559376760f141b89" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="514" refid="ADLXDefines_8h_1a83322f63ada9c973559376760f141b89a03058f4b63d7d11fe6a5aa47154590a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a83322f63ada9c973559376760f141b89a03058f4b63d7d11fe6a5aa47154590a4" kindref="member">DESKTOP_SINGLE</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="515" refid="ADLXDefines_8h_1a83322f63ada9c973559376760f141b89ac96f7ed618b411fc68b0e1fe21f2e62c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a83322f63ada9c973559376760f141b89ac96f7ed618b411fc68b0e1fe21f2e62c" kindref="member">DESKTOP_DUPLCATE</ref><sp/>=<sp/>1,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="516" refid="ADLXDefines_8h_1a83322f63ada9c973559376760f141b89ac483eaf5310613780a7901e317b9b2a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a83322f63ada9c973559376760f141b89ac483eaf5310613780a7901e317b9b2a2" kindref="member">DESKTOP_EYEFINITY</ref><sp/>=<sp/>2,<sp/><sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal">}<sp/><ref refid="ADLXDefines_8h_1a83322f63ada9c973559376760f141b89" kindref="member">ADLX_DESKTOP_TYPE</ref>;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_DESKTOP_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX<sp/>callbacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521" refid="ADLXDefines_8h_1a661f62b18e83b1f4c2d229d44c0ad7fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0" kindref="member">ADLX_RESULT</ref><sp/>(<ref refid="ADLXDefines_8h_1ae65e2f8bee9a29f8e00bf58746fa59a0" kindref="member">ADLX_CDECL_CALL</ref><sp/>*<ref refid="ADLXDefines_8h_1a661f62b18e83b1f4c2d229d44c0ad7fc" kindref="member">ADLXQueryVersion_Fn</ref>)(<ref refid="ADLXDefines_8h_1aefc827e657b29c87c0f3de4af0313663" kindref="member">adlx_uint64</ref>*<sp/>pVersion);</highlight></codeline>
<codeline lineno="522" refid="ADLXDefines_8h_1a9c630b468809c08e39b777ef38f1d27e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="ADLXDefines_8h_1a5339814ff38733ae1fb89b372143a9e7" kindref="member">ADLX_STD_CALL</ref><sp/>*<ref refid="ADLXDefines_8h_1a9c630b468809c08e39b777ef38f1d27e" kindref="member">ADLX_ADL_Main_Memory_Free</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>lpBuffer_);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX<sp/>callbacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX<sp/>data<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment">//definitions<sp/>for<sp/>IADLXInterface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ADLX_DECLARE_IID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="comment">//IID&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="ADLXDefines_8h_1a2297e1f14e76bd30cd1b24a018218692" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_DECLARE_IID(X)<sp/>static<sp/>ADLX_INLINE<sp/>const<sp/>wchar_t*<sp/>IID()<sp/><sp/>{<sp/>return<sp/>X;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_IS_IID(X,<sp/>Y)<sp/>(!wcscmp<sp/>(X,<sp/>Y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="ADLXDefines_8h_1aede8a40979edc05b036d618792c64151" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_DECLARE_ITEM_IID(X)<sp/>static<sp/>ADLX_INLINE<sp/>const<sp/>wchar_t*<sp/>ITEM_IID()<sp/><sp/>{<sp/>return<sp/>X;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544" refid="ADLXDefines_8h_1a930574b15ad76647f7d55cb0273cf397" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_IS_IID(X,<sp/>Y)<sp/>(!wcscmp<sp/>(X,<sp/>Y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">//__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_IS_IID(X,<sp/>Y)<sp/>(!wcscmp<sp/>(X,<sp/>Y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_DECLARE_IID(name,X)<sp/>static<sp/>const<sp/>wchar_t*<sp/>IID_##name(void)<sp/><sp/>{<sp/>return<sp/>X;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLX_DECLARE_ITEM_IID(name,X)<sp/>static<sp/>const<sp/>wchar_t*<sp/>ITEM_IID_##name(void)<sp/><sp/>{<sp/>return<sp/>X;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>ADLX_DECLARE_IID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment">//All<sp/>ref-counted<sp/>interfaces<sp/>derive<sp/>from<sp/>this<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>IADLXInterface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="namespaceadlx" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceadlx" kindref="compound">adlx</ref></highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="classadlx_1_1IADLXInterface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="ADLXDefines_8h_1a5e8ce4ed67dbfc5e6a6e691ebb5a1091" kindref="member">ADLX_NO_VTABLE</ref><sp/><ref refid="classadlx_1_1IADLXInterface" kindref="compound">IADLXInterface</ref></highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="567" refid="classadlx_1_1IADLXInterface_1a84b2474f2941b11e03797ea8a2913034" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a2297e1f14e76bd30cd1b24a018218692" kindref="member">ADLX_DECLARE_IID</ref>(L</highlight><highlight class="stringliteral">&quot;IADLXInterface&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="573" refid="classadlx_1_1IADLXInterface_1a983d24356f5cbfdcca173454f3e09deb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/><ref refid="group__ADLXDefs_1ga201851605e965b5eb54b45e81b95af70" kindref="member">adlx_long</ref><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a5339814ff38733ae1fb89b372143a9e7" kindref="member">ADLX_STD_CALL</ref><sp/>Acquire<sp/>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="579" refid="classadlx_1_1IADLXInterface_1ae993f9bbde0a75386d4368d5998df213" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/><ref refid="group__ADLXDefs_1ga201851605e965b5eb54b45e81b95af70" kindref="member">adlx_long</ref><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a5339814ff38733ae1fb89b372143a9e7" kindref="member">ADLX_STD_CALL</ref><sp/>Release()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="classadlx_1_1IADLXInterface_1aec8f7d033d48598b4fe1bf448b6be465" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0" kindref="member">ADLX_RESULT</ref><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a5339814ff38733ae1fb89b372143a9e7" kindref="member">ADLX_STD_CALL</ref><sp/>QueryInterface<sp/>(const<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>interfaceId,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>ppInterface)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="588"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//IADLXInterface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>adlx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">//__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a2297e1f14e76bd30cd1b24a018218692" kindref="member">ADLX_DECLARE_IID</ref>(<ref refid="classadlx_1_1IADLXInterface" kindref="compound">IADLXInterface</ref>,L</highlight><highlight class="stringliteral">&quot;IADLXInterface&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classadlx_1_1IADLXInterface" kindref="compound">IADLXInterface</ref><sp/><ref refid="classadlx_1_1IADLXInterface" kindref="compound">IADLXInterface</ref>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IADLXInterfaceVtbl</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IADLXInterface<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ADLXDefs_1ga201851605e965b5eb54b45e81b95af70" kindref="member">adlx_long</ref>(<ref refid="ADLXDefines_8h_1a5339814ff38733ae1fb89b372143a9e7" kindref="member">ADLX_STD_CALL</ref><sp/>*Acquire)(<ref refid="classadlx_1_1IADLXInterface" kindref="compound">IADLXInterface</ref>*<sp/>pThis);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ADLXDefs_1ga201851605e965b5eb54b45e81b95af70" kindref="member">adlx_long</ref>(<ref refid="ADLXDefines_8h_1a5339814ff38733ae1fb89b372143a9e7" kindref="member">ADLX_STD_CALL</ref><sp/>*Release)(<ref refid="classadlx_1_1IADLXInterface" kindref="compound">IADLXInterface</ref>*<sp/>pThis);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0" kindref="member">ADLX_RESULT</ref>(<ref refid="ADLXDefines_8h_1a5339814ff38733ae1fb89b372143a9e7" kindref="member">ADLX_STD_CALL</ref><sp/>*QueryInterface)(<ref refid="classadlx_1_1IADLXInterface" kindref="compound">IADLXInterface</ref>*<sp/>pThis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>interfaceId,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>ppInterface);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>IADLXInterfaceVtbl;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classadlx_1_1IADLXInterface" kindref="compound">IADLXInterface</ref></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IADLXInterfaceVtbl<sp/>*pVtbl;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>IADLXInterface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">//Template<sp/>for<sp/>ADLX<sp/>smart<sp/>pointer<sp/>for<sp/>interfaces<sp/>derived<sp/>from<sp/>IADLXInterface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>IADLXInterfacePtr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceadlx" kindref="compound">adlx</ref></highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>_Interf&gt;</highlight></codeline>
<codeline lineno="618" refid="classadlx_1_1IADLXInterfacePtr__T" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classadlx_1_1IADLXInterfacePtr__T" kindref="compound">IADLXInterfacePtr_T</ref></highlight></codeline>
<codeline lineno="619"><highlight class="normal">{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>_Interf*<sp/>m_pInterf;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InternalAcquire()</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pInterf<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pInterf-&gt;Acquire();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InternalRelease()</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pInterf<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pInterf-&gt;<ref refid="classadlx_1_1IADLXInterfacePtr__T_1a54cee81606e3bd4b53a488341e69271a" kindref="member">Release</ref>();</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="638" refid="classadlx_1_1IADLXInterfacePtr__T_1afe9eed0823bb9dc38068d36bd1489e11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1afe9eed0823bb9dc38068d36bd1489e11" kindref="member">IADLXInterfacePtr_T</ref>()<sp/>:<sp/>m_pInterf(nullptr)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641" refid="classadlx_1_1IADLXInterfacePtr__T_1a05f9c13b9d9c824de1e00414d4dd1b36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1a05f9c13b9d9c824de1e00414d4dd1b36" kindref="member">IADLXInterfacePtr_T</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T" kindref="compound">IADLXInterfacePtr_T&lt;_Interf&gt;</ref>&amp;<sp/>p)<sp/>:<sp/>m_pInterf(p.m_pInterf)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InternalAcquire();</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646" refid="classadlx_1_1IADLXInterfacePtr__T_1af01e3a1aa130a1905e5fb5572049879f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1af01e3a1aa130a1905e5fb5572049879f" kindref="member">IADLXInterfacePtr_T</ref>(_Interf*<sp/>pInterface)<sp/>:<sp/>m_pInterf(pInterface)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InternalAcquire();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>_OtherInterf&gt;</highlight></codeline>
<codeline lineno="652" refid="classadlx_1_1IADLXInterfacePtr__T_1aa5ea8c7258cc40b3951cf5f61f6a9a46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1aa5ea8c7258cc40b3951cf5f61f6a9a46" kindref="member">IADLXInterfacePtr_T</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T" kindref="compound">IADLXInterfacePtr_T&lt;_OtherInterf&gt;</ref>&amp;<sp/>cp)<sp/>:<sp/>m_pInterf(nullptr)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pInterf<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cp<sp/>==<sp/>NULL)<sp/>||<sp/>(cp-&gt;QueryInterface(_Interf::IID(),<sp/>&amp;pInterf)<sp/>!=<sp/><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a72597a9998fa21f37bfcaddd9cafaed5" kindref="member">ADLX_OK</ref>))</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pInterf<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pInterf<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">_Interf*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pInterf);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>_OtherInterf&gt;</highlight></codeline>
<codeline lineno="663" refid="classadlx_1_1IADLXInterfacePtr__T_1a7b0fa9358f3a2ef62d5536c7f7c72b67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1a7b0fa9358f3a2ef62d5536c7f7c72b67" kindref="member">IADLXInterfacePtr_T</ref>(_OtherInterf*<sp/>cp)<sp/>:<sp/>m_pInterf(nullptr)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pInterf<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cp<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>||<sp/>(cp-&gt;QueryInterface(_Interf::IID(),<sp/>&amp;pInterf)<sp/>!=<sp/><ref refid="ADLXDefines_8h_1a9306b05f15578edbf79b649dd612b8c0a72597a9998fa21f37bfcaddd9cafaed5" kindref="member">ADLX_OK</ref>))</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pInterf<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pInterf<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">_Interf*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pInterf);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673" refid="classadlx_1_1IADLXInterfacePtr__T_1a08b64a9f271594d33d13e2e9324040fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1a08b64a9f271594d33d13e2e9324040fc" kindref="member">~IADLXInterfacePtr_T</ref>()</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InternalRelease();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678" refid="classadlx_1_1IADLXInterfacePtr__T_1a9ef1e1c6609c80ce9d3df99d2004b893" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T" kindref="compound">IADLXInterfacePtr_T</ref>&amp;<sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1a9ef1e1c6609c80ce9d3df99d2004b893" kindref="member">operator=</ref>(_Interf*<sp/>pInterface)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pInterf<sp/>!=<sp/>pInterface)</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Interf*<sp/>pOldInterface<sp/>=<sp/>m_pInterf;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pInterf<sp/>=<sp/>pInterface;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InternalAcquire();</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pOldInterface<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOldInterface-&gt;Release();</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693" refid="classadlx_1_1IADLXInterfacePtr__T_1a9fe94d028a721750fd315e1bb4d77865" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T" kindref="compound">IADLXInterfacePtr_T</ref>&amp;<sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1a9fe94d028a721750fd315e1bb4d77865" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T" kindref="compound">IADLXInterfacePtr_T&lt;_Interf&gt;</ref>&amp;<sp/>cp)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>operator=(cp.m_pInterf);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698" refid="classadlx_1_1IADLXInterfacePtr__T_1aa956f1f359f36f0f7ad806a0fb066b09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1aa956f1f359f36f0f7ad806a0fb066b09" kindref="member">Attach</ref>(_Interf*<sp/>pInterface)</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InternalRelease();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pInterf<sp/>=<sp/>pInterface;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704" refid="classadlx_1_1IADLXInterfacePtr__T_1a72ea92232a06e4475304ac6d2d845e8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_Interf*<sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1a72ea92232a06e4475304ac6d2d845e8d" kindref="member">Detach</ref>()</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Interf*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pOld<sp/>=<sp/>m_pInterf;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pInterf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pOld;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710" refid="classadlx_1_1IADLXInterfacePtr__T_1a54cee81606e3bd4b53a488341e69271a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1a54cee81606e3bd4b53a488341e69271a" kindref="member">Release</ref>()</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InternalRelease();</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pInterf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716" refid="classadlx_1_1IADLXInterfacePtr__T_1a18589d52e786875eae7066886af70513" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>_Interf*()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pInterf;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721" refid="classadlx_1_1IADLXInterfacePtr__T_1a42e748ea212a3ec9d9fbf28b179140a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_Interf&amp;<sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1a42e748ea212a3ec9d9fbf28b179140a9" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="722"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_pInterf;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>address<sp/>of<sp/>the<sp/>interface<sp/>pointer<sp/>contained<sp/>in<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>class.<sp/>This<sp/>is<sp/>required<sp/>for<sp/>initializing<sp/>from<sp/>C-style<sp/>factory<sp/>function<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>getting<sp/>an<sp/>incorrect<sp/>ref<sp/>count<sp/>at<sp/>the<sp/>beginning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="classadlx_1_1IADLXInterfacePtr__T_1a4de3bd5014eff66945decad9d0d1e027" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_Interf**<sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1a4de3bd5014eff66945decad9d0d1e027" kindref="member">operator&amp;</ref>()</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InternalRelease();</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pInterf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_pInterf;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737" refid="classadlx_1_1IADLXInterfacePtr__T_1aff9ce608faa488ebe39cc9dade26b6d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_Interf*<sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1aff9ce608faa488ebe39cc9dade26b6d1" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="738"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pInterf;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742" refid="classadlx_1_1IADLXInterfacePtr__T_1a3087bd6b927d47adf877acd0361cefcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1a3087bd6b927d47adf877acd0361cefcf" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T" kindref="compound">IADLXInterfacePtr_T&lt;_Interf&gt;</ref>&amp;<sp/>p)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_pInterf<sp/>==<sp/>p.m_pInterf);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747" refid="classadlx_1_1IADLXInterfacePtr__T_1ac3eba21679dd9e6f84a7893a2e909135" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1ac3eba21679dd9e6f84a7893a2e909135" kindref="member">operator==</ref>(_Interf*<sp/>p)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_pInterf<sp/>==<sp/>p);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752" refid="classadlx_1_1IADLXInterfacePtr__T_1ab6972ca12cf94c8093691cd985d9a3ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1ab6972ca12cf94c8093691cd985d9a3ef" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T" kindref="compound">IADLXInterfacePtr_T&lt;_Interf&gt;</ref>&amp;<sp/>p)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(operator==(p));</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756" refid="classadlx_1_1IADLXInterfacePtr__T_1ab46900e730041407359df4915efd2b9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1ab46900e730041407359df4915efd2b9c" kindref="member">operator!=</ref>(_Interf*<sp/>p)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(operator==(p));</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761" refid="classadlx_1_1IADLXInterfacePtr__T_1a5536cc867464fb10886da8cda271463c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_Interf*<sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1a5536cc867464fb10886da8cda271463c" kindref="member">GetPtr</ref>()</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pInterf;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766" refid="classadlx_1_1IADLXInterfacePtr__T_1a1efc30f8e9e005a788314479830c1230" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_Interf*<sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T_1a1efc30f8e9e005a788314479830c1230" kindref="member">GetPtr</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="767"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pInterf;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal">};<sp/></highlight><highlight class="comment">//IADLXInterfacePtr_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772" refid="namespaceadlx_1a1bab3fefaeca83e25dceb93bb9fd182f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classadlx_1_1IADLXInterfacePtr__T" kindref="compound">IADLXInterfacePtr_T&lt;IADLXInterface&gt;</ref><sp/><ref refid="namespaceadlx_1a1bab3fefaeca83e25dceb93bb9fd182f" kindref="member">IADLXInterfacePtr</ref>;</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>adlx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion<sp/>IADLXInterfacePtr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//ADLX_DEFINES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/test/ADLX/Include/ADLXDefines.h"/>
  </compounddef>
</doxygen>
